name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

permissions:
  contents: read

jobs:
  test-linux:
    name: Tests (Ubuntu)
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_PASSWORD: postgres
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready -U postgres" --health-interval=10s --health-timeout=5s --health-retries=5
    env:
      PGHOST: localhost
      PGPORT: 5432
      PGDATABASE: postgres
      PGUSER: postgres
      PGPASSWORD: postgres
      CARGO_TERM_COLOR: always
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install jq and Postgres client
        run: |
          sudo apt-get update
          sudo apt-get install -y jq libjq-dev libonig-dev pkg-config postgresql-client

      - name: Configure jq env (Ubuntu)
        run: |
          echo "JQ_LIB_DIR=/usr/lib/x86_64-linux-gnu" >> "$GITHUB_ENV"
          echo "JQ_INCLUDE_DIR=/usr/include" >> "$GITHUB_ENV"

      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Cache cargo
        uses: Swatinem/rust-cache@v2

      - name: Wait for Postgres
        run: |
          for i in {1..30}; do
            pg_isready -h "$PGHOST" -p "$PGPORT" -U "$PGUSER" && break
            sleep 1
          done

      - name: Run tests (with pg)
        run: cargo test --tests --features pg_tests --verbose

  test-macos:
    name: Tests (macOS)
    runs-on: macos-latest
    env:
      PGHOST: localhost
      PGPORT: 5432
      PGDATABASE: postgres
      PGUSER: postgres
      PGPASSWORD: postgres
      CARGO_TERM_COLOR: always
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Postgres, jq, and deps (Homebrew)
        run: |
          brew update
          brew install postgresql@15 jq oniguruma pkg-config
          echo "$(brew --prefix postgresql@15)/bin" >> "$GITHUB_PATH"

      - name: Configure pkg-config and linker paths (Homebrew)
        run: |
          echo "PKG_CONFIG_PATH=$(brew --prefix)/lib/pkgconfig:$(brew --prefix jq)/lib/pkgconfig:$(brew --prefix oniguruma)/lib/pkgconfig:$PKG_CONFIG_PATH" >> "$GITHUB_ENV"
          echo "LIBRARY_PATH=$(brew --prefix)/lib:$(brew --prefix oniguruma)/lib:$LIBRARY_PATH" >> "$GITHUB_ENV"
          echo "LDFLAGS=-L$(brew --prefix jq)/lib -L$(brew --prefix oniguruma)/lib $LDFLAGS" >> "$GITHUB_ENV"
          echo "CPPFLAGS=-I$(brew --prefix jq)/include $CPPFLAGS" >> "$GITHUB_ENV"
          echo "JQ_LIB_DIR=$(brew --prefix jq)/lib" >> "$GITHUB_ENV"
          echo "JQ_INCLUDE_DIR=$(brew --prefix jq)/include" >> "$GITHUB_ENV"

      - name: Init and start Postgres
        run: |
          initdb -D /tmp/pgdb
          pg_ctl -D /tmp/pgdb -o "-p $PGPORT" -l /tmp/pglog start
          # Create role and database used by tests
          createuser -s postgres || true
          createdb -O postgres postgres || true
          # Wait until ready
          for i in {1..30}; do
            pg_isready -h "$PGHOST" -p "$PGPORT" -U "$PGUSER" && break
            sleep 1
          done

      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Cache cargo
        uses: Swatinem/rust-cache@v2

      - name: Run tests (with pg)
        run: cargo test --tests --features pg_tests --verbose


